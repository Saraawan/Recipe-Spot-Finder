/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class NewPassword extends javax.swing.JFrame {

    String databasepath = "Database.accdb";

    /**
     * Creates new form NewPassword
     */
    public NewPassword() {
        initComponents();

    }

    public NewPassword(String username) {
        initComponents();

        emailaddress.setText(username);
        passwordnotmatch.setText("");
        newpassword.setText("");
        confirmpassword.setText("");

        closeicon.setCursor(new Cursor(Cursor.HAND_CURSOR));
        minimizeicon.setCursor(new Cursor(Cursor.HAND_CURSOR));
        backbutton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        this.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        setLocationRelativeTo(null);

        inputnewpassword.addFocusListener(new FocusListener() {

            @Override
            public void focusGained(FocusEvent e) {
                newpassword.setText("");
                passwordnotmatch.setText("");
            }

            @Override
            public void focusLost(FocusEvent e) {
                newpassword.setText("");
                passwordnotmatch.setText("");
            }
        });
        inputconfirmpassword.addFocusListener(new FocusListener() {

            @Override
            public void focusGained(FocusEvent e) {
                confirmpassword.setText("");
                passwordnotmatch.setText("");
            }

            @Override
            public void focusLost(FocusEvent e) {
                confirmpassword.setText("");
                passwordnotmatch.setText("");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new Clases.PanelRound();
        jLabel4 = new javax.swing.JLabel();
        closeicon = new javax.swing.JLabel();
        minimizeicon = new javax.swing.JLabel();
        backbutton = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        emailaddress = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        inputnewpassword = new javax.swing.JPasswordField();
        newpassword = new javax.swing.JLabel();
        confirmpassword = new javax.swing.JLabel();
        inputconfirmpassword = new javax.swing.JPasswordField();
        passwordnotmatch = new javax.swing.JLabel();
        savepassword = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelRound1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel4.setBackground(new java.awt.Color(196, 181, 129));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(196, 181, 129));
        jLabel4.setText("Change Password");

        closeicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/closegold.png"))); // NOI18N
        closeicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeiconMouseClicked(evt);
            }
        });

        minimizeicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/minimizegold.png"))); // NOI18N
        minimizeicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeiconMouseClicked(evt);
            }
        });

        backbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/backbuttongold.png"))); // NOI18N
        backbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbuttonMouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/forgotpassword.png"))); // NOI18N

        emailaddress.setBackground(new java.awt.Color(196, 181, 129));
        emailaddress.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        emailaddress.setForeground(new java.awt.Color(196, 181, 129));
        emailaddress.setText("email");

        jLabel1.setBackground(new java.awt.Color(196, 181, 129));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(196, 181, 129));
        jLabel1.setText("New Password:");

        inputnewpassword.setBackground(new java.awt.Color(0, 51, 51));
        inputnewpassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        inputnewpassword.setForeground(new java.awt.Color(255, 255, 255));
        inputnewpassword.setBorder(null);

        newpassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        newpassword.setForeground(new java.awt.Color(255, 51, 0));
        newpassword.setText("password");

        confirmpassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        confirmpassword.setForeground(new java.awt.Color(255, 51, 0));
        confirmpassword.setText("password");

        inputconfirmpassword.setBackground(new java.awt.Color(0, 51, 51));
        inputconfirmpassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        inputconfirmpassword.setForeground(new java.awt.Color(255, 255, 255));
        inputconfirmpassword.setBorder(null);

        passwordnotmatch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passwordnotmatch.setForeground(new java.awt.Color(255, 0, 0));
        passwordnotmatch.setText("Password does not match");

        savepassword.setBackground(new java.awt.Color(196, 181, 129));
        savepassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        savepassword.setForeground(new java.awt.Color(0, 51, 51));
        savepassword.setText("Update Password");
        savepassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savepasswordActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(196, 181, 129));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(196, 181, 129));
        jLabel2.setText("Confirm Password:");

        jLabel3.setBackground(new java.awt.Color(196, 181, 129));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(196, 181, 129));
        jLabel3.setText("Your Email:");

        jSeparator1.setBackground(new java.awt.Color(196, 181, 129));
        jSeparator1.setForeground(new java.awt.Color(196, 181, 129));

        jSeparator2.setBackground(new java.awt.Color(196, 181, 129));
        jSeparator2.setForeground(new java.awt.Color(196, 181, 129));

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRound1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRound1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputnewpassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inputconfirmpassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelRound1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(confirmpassword))
                            .addGroup(panelRound1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(newpassword))
                            .addGroup(panelRound1Layout.createSequentialGroup()
                                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelRound1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(emailaddress))
                                    .addComponent(passwordnotmatch)
                                    .addComponent(backbutton)
                                    .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(savepassword, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(28, 28, 28))
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(30, 30, 30)
                .addComponent(minimizeicon)
                .addGap(3, 3, 3)
                .addComponent(closeicon)
                .addGap(20, 20, 20))
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeicon)
                    .addComponent(minimizeicon)
                    .addComponent(jLabel4)
                    .addComponent(backbutton))
                .addGap(22, 22, 22)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailaddress)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newpassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputnewpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmpassword)
                    .addComponent(jLabel2))
                .addGap(5, 5, 5)
                .addComponent(inputconfirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(passwordnotmatch)
                .addGap(18, 18, 18)
                .addComponent(savepassword, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String encryptPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            md.update(password.getBytes());
            byte[] digest = md.digest();
            StringBuilder sb = new StringBuilder();
            for (byte b : digest) {
                sb.append(String.format("%02x", b & 0xff));
            }
            return sb.toString();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            return null;
        }
    }
    
    
    private void savepasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savepasswordActionPerformed
        // TODO add your handling code here:
        String firstpassword = new String(inputnewpassword.getPassword());
        String secondpassword = new String(inputconfirmpassword.getPassword());
        int passlength = firstpassword.length();
        String email = emailaddress.getText();

        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;

        if (firstpassword.isEmpty() && secondpassword.isEmpty()) {
            newpassword.setText("Required field!");
            confirmpassword.setText("Required field!");
        } else if (firstpassword.isEmpty()) {
            newpassword.setText("Required field!");
        } else if (secondpassword.isEmpty()) {
            confirmpassword.setText("Required field!");
        } else if (passlength < 8) {
            JOptionPane.showMessageDialog(this, "password should be more than 8 chracters");
        } else if (passlength > 16) {
            JOptionPane.showMessageDialog(this, "password should be less than 16 chracters");
        } else if (!firstpassword.equals(secondpassword)) {
            passwordnotmatch.setText("Password does not match");
            inputnewpassword.setText("");
            inputconfirmpassword.setText("");
        } else if (firstpassword.equals(secondpassword)) {

            String encryptedPassword = encryptPassword(firstpassword);
            
            
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                con = DriverManager.getConnection("jdbc:ucanaccess://" + databasepath);
                String query = "UPDATE user SET Password = ? WHERE Email = ?";
                pst = con.prepareStatement(query);
                pst.setString(1, encryptedPassword);
                pst.setString(2, email);

                int rowsAffected = pst.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showConfirmDialog(this, "Password Updated Successfully", "Success", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    LoginForm lf=new LoginForm();
                    lf.show();
                    dispose();
                } else {
                    JOptionPane.showConfirmDialog(this, "something went wrong");
                }

            } catch (Exception e) {
                System.out.println(e);
            }

        }


    }//GEN-LAST:event_savepasswordActionPerformed

    private void closeiconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeiconMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeiconMouseClicked

    private void minimizeiconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeiconMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeiconMouseClicked

    private void backbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbuttonMouseClicked
        // TODO add your handling code here:
        LoginForm lf = new LoginForm();
        lf.show();
        dispose();
    }//GEN-LAST:event_backbuttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backbutton;
    private javax.swing.JLabel closeicon;
    private javax.swing.JLabel confirmpassword;
    private javax.swing.JLabel emailaddress;
    private javax.swing.JPasswordField inputconfirmpassword;
    private javax.swing.JPasswordField inputnewpassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel minimizeicon;
    private javax.swing.JLabel newpassword;
    private Clases.PanelRound panelRound1;
    private javax.swing.JLabel passwordnotmatch;
    private javax.swing.JButton savepassword;
    // End of variables declaration//GEN-END:variables
}
